on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

name: CI Tests

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
          
      - name: Run linting
        run: |
          uv run ruff check sweet tests
          
      - name: Run tests with coverage
        run: |
          uv run pytest --cov=sweet --cov-report=term-missing --cov-report=html
          
      - name: Upload coverage reports to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        with:
          name: "py${{ matrix.python-version }}"
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release-pypi:
    name: "Release to PyPI"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: test
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for setuptools-scm
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Build package
        run: |
          uv pip install --system build
          python -m build --sdist --wheel
          
      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
