[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sweet"
dynamic = ["version"]
description = "An interactive console application for data manipulation"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Richard Iannone", email = "rich@posit.co" },
]
keywords = [
    "data-engineering",
    "textual",
    "polars",
    "cli",
    "interactive",
    "data-manipulation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "textual>=0.41.0",
    "polars>=0.20.0",
    "duckdb>=0.9.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.scripts]
sweet = "sweet.cli:main"

[project.urls]
Homepage = "https://github.com/rich-iannone/sweet"
Repository = "https://github.com/rich-iannone/sweet"
Issues = "https://github.com/rich-iannone/sweet/issues"

[tool.hatch.version]
path = "sweet/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["sweet"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "F401", "F403"]

[tool.ruff.lint.isort]
known-first-party = ["sweet"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=sweet --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["sweet"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
